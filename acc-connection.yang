module acc-connection {
    yang-version 1.1;
    namespace "urn:ccsa:yang:acc-connection";
    prefix acc-con;

    import acc-devm {
         prefix acc-devm; 
    }

    import acc-yang-types {
        prefix acc-type;
    }

    revision 2019-02-13 {
    }
    
    typedef adaptation-mode {
        type enumeration {
            enum GFP-F {
                value 0;
            }
            enum CBRx_GMP {
                value 1;
            }
            enum CBR_BMP {
                value 2;
            }
        }
    }
    /*
    * common types
    */

    /*
    * groupings
    */
    grouping capacity {
        choice for-odu-or-eth {
            case for-odu-or-sdh {
                leaf total-size {
                    mandatory true;
                    type uint64;
                    description "total size, When ODU,SDH,  mandatory must to be true and others must not exists";
                }
            }
            case for-eth-or-eos {
                leaf cir {
                    mandatory true;
                    type uint64;
                    description "Important , When ETH,EOS   mandatory must to be true and total-size must not exists";
                }
                leaf pir {
                    type uint64;
                    description "Important , When ETH,EOS   mandatory must to be true and total-size must not exists";
                }
                leaf cbs {
                    type uint64;
                }
                leaf pbs {
                    type uint64;
                }
            }
        }
    }

    grouping connection {
        leaf name {
            mandatory true;
            type string;
            description "connection name must be unique in one device";
        }
        container state-pac {
            uses acc-devm:state-pac;
        }
        leaf layer-protocol-name {
            mandatory true;
            type identityref {
                base acc-type:layer-protocol-name;
            }
        }
        container requested-capacity {
            uses capacity;
        }
        leaf-list ctp {
            type leafref {
                path '/acc-devm:ctps/acc-devm:ctp/acc-devm:name';
            }
            min-elements 2;
        }
        leaf service-type {
            mandatory true;
            type acc-devm:service-type;
        }
        leaf pg-id {
            type uint16;
            description "pg id";
        }
    }

    grouping create-connection {
        leaf connection-name {
            type string;
            description "connection name must be unique in device";
        }
        leaf service-type {
            mandatory true;
            type acc-devm:service-type;
        }
        leaf layer-protocol-name {
            mandatory true;
            type identityref {
                base acc-type:layer-protocol-name;
            }
        }
        container requested-capacity {
            uses capacity;
        }
        description "create connection";
    }

    /*
    * the data tree
    */
    container connections {
        list connection {
            key 'name';
            uses connection;
            description "connection list";
        }
        description "connection container";
    }
}
